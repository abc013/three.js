{"objects":{"25":{"x":1223,"y":980,"elements":[26,28],"autoResize":true,"source":"layout = {\n\tname: 'Teapot Scene',\n\twidth: 300,\n\telements: [\n\t\t{ name: 'Material', inputType: 'Material' }\n\t]\n};\n\nfunction load() {\n\n\tasync function asyncLoad() {\n\n\t\tconst { RGBMLoader } = await import( 'three/addons/loaders/RGBMLoader.js' );\n\n\t\tconst rgbmUrls = [ 'px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png' ];\n\n\t\tconst cubeMap = new RGBMLoader()\n\t\t\t.setMaxRange( 16 )\n\t\t\t.setPath( '../examples/textures/cube/pisaRGBM16/' )\n\t\t\t.loadCubemap( rgbmUrls );\n\n\t\tcubeMap.generateMipmaps = true;\n\t\tcubeMap.minFilter = THREE.LinearMipmapLinearFilter;\n\n\t\t//\n\n\t\tconst scene = global.get( 'scene' );\n\n\t\tscene.environment = cubeMap;\n\n\t\t//\n\n\t\tconst { TeapotGeometry } = await import( 'three/addons/geometries/TeapotGeometry.js' );\n\n\t\tconst geometryTeapot = new TeapotGeometry( 1, 18 );\n\t\tconst mesh = new THREE.Mesh( geometryTeapot );\n\n\t\tlocal.set( 'mesh', mesh );\n\n\t\trefresh();\n\n\t}\n\n\tasyncLoad();\n\n}\n\nfunction main() {\n\n\tconst mesh = local.get( 'mesh', load );\n\n\tif ( mesh ) {\n\n\t\tmesh.material = parameters.get( 'Material' ) || new THREE.MeshStandardMaterial();\n\n\t}\n\n\treturn mesh;\n\n}\n","id":25,"type":"NodePrototypeEditor"},"26":{"outputLength":1,"height":null,"title":"Node Prototype","icon":"ti ti-ti ti-components","id":26,"type":"TitleElement"},"28":{"height":507,"source":"layout = {\n\tname: 'Teapot Scene',\n\twidth: 300,\n\telements: [\n\t\t{ name: 'Material', inputType: 'Material' }\n\t]\n};\n\nfunction load() {\n\n\tasync function asyncLoad() {\n\n\t\tconst { RGBMLoader } = await import( 'three/addons/loaders/RGBMLoader.js' );\n\n\t\tconst rgbmUrls = [ 'px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png' ];\n\n\t\tconst cubeMap = new RGBMLoader()\n\t\t\t.setMaxRange( 16 )\n\t\t\t.setPath( '../examples/textures/cube/pisaRGBM16/' )\n\t\t\t.loadCubemap( rgbmUrls );\n\n\t\tcubeMap.generateMipmaps = true;\n\t\tcubeMap.minFilter = THREE.LinearMipmapLinearFilter;\n\n\t\t//\n\n\t\tconst scene = global.get( 'scene' );\n\n\t\tscene.environment = cubeMap;\n\n\t\t//\n\n\t\tconst { TeapotGeometry } = await import( 'three/addons/geometries/TeapotGeometry.js' );\n\n\t\tconst geometryTeapot = new TeapotGeometry( 1, 18 );\n\t\tconst mesh = new THREE.Mesh( geometryTeapot );\n\n\t\tlocal.set( 'mesh', mesh );\n\n\t\trefresh();\n\n\t}\n\n\tasyncLoad();\n\n}\n\nfunction main() {\n\n\tconst mesh = local.get( 'mesh', load );\n\n\tif ( mesh ) {\n\n\t\tmesh.material = parameters.get( 'Material' ) || new THREE.MeshStandardMaterial();\n\n\t}\n\n\treturn mesh;\n\n}\n","id":28,"type":"CodeEditorElement"},"31":{"x":406,"y":446,"elements":[32,250],"autoResize":false,"layoutJSON":"{\"name\":\"Teapot Scene\",\"width\":300,\"elements\":[{\"name\":\"Material\",\"inputType\":\"Material\"}]}","id":31,"type":"Teapot Scene"},"32":{"outputLength":1,"height":null,"title":"Teapot Scene","icon":"ti ti-ti ti-variable","id":32,"type":"TitleElement"},"36":{"x":-2453,"y":494,"elements":[37],"autoResize":false,"id":36,"type":"NormalGeometry"},"37":{"outputLength":3,"height":null,"title":"Normal Geometry","icon":"ti ti-arrow-bar-up","id":37,"type":"TitleElement"},"40":{"x":42,"y":444,"elements":[41,43,44,45],"autoResize":false,"id":40,"type":"BasicMaterialEditor"},"41":{"outputLength":1,"height":null,"title":"Basic Material","icon":"ti ti-ti ti-circle","id":41,"type":"TitleElement"},"43":{"inputLength":3,"inputs":[46],"links":[77],"height":null,"id":43,"type":"LabelElement"},"44":{"inputLength":1,"inputs":[47],"height":null,"id":44,"type":"LabelElement"},"45":{"inputLength":3,"height":null,"id":45,"type":"LabelElement"},"46":{"value":16777215,"id":46,"type":"ColorInput"},"47":{"min":0,"max":1,"value":1,"id":47,"type":"SliderInput"},"56":{"x":36,"y":775,"elements":[57,59,60,61],"autoResize":false,"id":56,"type":"BasicMaterialEditor"},"57":{"outputLength":1,"height":null,"title":"Basic Material","icon":"ti ti-ti ti-circle","id":57,"type":"TitleElement"},"59":{"inputLength":3,"inputs":[62],"links":[175],"height":null,"id":59,"type":"LabelElement"},"60":{"inputLength":1,"inputs":[63],"height":null,"id":60,"type":"LabelElement"},"61":{"inputLength":3,"height":null,"id":61,"type":"LabelElement"},"62":{"value":16777215,"id":62,"type":"ColorInput"},"63":{"min":0,"max":1,"value":1,"id":63,"type":"SliderInput"},"74":{"inputLength":1,"links":[93],"height":null,"id":74,"type":"LabelElement"},"75":{"inputLength":1,"links":[85],"height":null,"id":75,"type":"LabelElement"},"76":{"x":-322,"y":475,"elements":[77,74,75],"autoResize":false,"id":76,"type":"Division"},"77":{"outputLength":1,"height":null,"title":"Division","icon":"ti ti-divide","id":77,"type":"TitleElement"},"82":{"inputs":[83],"height":null,"id":82,"type":"Element"},"83":{"value":2,"id":83,"type":"NumberInput"},"84":{"x":-576,"y":581,"elements":[85,82],"autoResize":false,"id":84,"type":"FloatEditor"},"85":{"outputLength":1,"height":null,"title":"Float","icon":"ti ti-ti ti-box-multiple-1","id":85,"type":"TitleElement"},"90":{"inputLength":1,"links":[99],"height":null,"id":90,"type":"LabelElement"},"91":{"inputLength":1,"links":[105],"height":null,"id":91,"type":"LabelElement"},"92":{"x":-908,"y":504,"elements":[93,90,91],"autoResize":false,"id":92,"type":"Addition"},"93":{"outputLength":1,"height":null,"title":"Addition","icon":"ti ti-plus","id":93,"type":"TitleElement"},"97":{"inputLength":1,"links":[113],"height":null,"id":97,"type":"LabelElement"},"98":{"x":-1364,"y":432,"elements":[99,97],"autoResize":false,"id":98,"type":"Sign"},"99":{"outputLength":1,"height":null,"title":"Sign","icon":"ti ti-math-function","id":99,"type":"TitleElement"},"103":{"inputLength":1,"links":[121],"height":null,"id":103,"type":"LabelElement"},"104":{"x":-1368,"y":627,"elements":[105,103],"autoResize":false,"id":104,"type":"Sign"},"105":{"outputLength":1,"height":null,"title":"Sign","icon":"ti ti-math-function","id":105,"type":"TitleElement"},"110":{"inputLength":1,"links":[129],"height":null,"id":110,"type":"LabelElement"},"111":{"inputLength":1,"links":[153],"height":null,"id":111,"type":"LabelElement"},"112":{"x":-1364,"y":332,"elements":[113,110,111],"autoResize":false,"id":112,"type":"Max"},"113":{"outputLength":1,"height":null,"title":"Max","icon":"ti ti-math-function","id":113,"type":"TitleElement"},"118":{"inputLength":1,"links":[137],"height":null,"id":118,"type":"LabelElement"},"119":{"inputLength":1,"links":[145],"height":null,"id":119,"type":"LabelElement"},"120":{"x":-1364,"y":520,"elements":[121,118,119],"autoResize":false,"id":120,"type":"Max"},"121":{"outputLength":1,"height":null,"title":"Max","icon":"ti ti-math-function","id":121,"type":"TitleElement"},"126":{"inputs":[127],"height":null,"id":126,"type":"Element"},"127":{"value":0,"id":127,"type":"NumberInput"},"128":{"x":-1562,"y":332,"elements":[129,126],"autoResize":false,"id":128,"type":"FloatEditor"},"129":{"outputLength":1,"height":null,"title":"Float","icon":"ti ti-ti ti-box-multiple-1","id":129,"type":"TitleElement"},"134":{"inputs":[135],"height":null,"id":134,"type":"Element"},"135":{"value":0,"id":135,"type":"NumberInput"},"136":{"x":-1560,"y":521,"elements":[137,134],"autoResize":false,"id":136,"type":"FloatEditor"},"137":{"outputLength":1,"height":null,"title":"Float","icon":"ti ti-ti ti-box-multiple-1","id":137,"type":"TitleElement"},"142":{"inputLength":1,"links":[161],"height":null,"id":142,"type":"LabelElement"},"143":{"inputLength":1,"links":[162],"height":null,"id":143,"type":"LabelElement"},"144":{"x":-1703,"y":603,"elements":[145,142,143],"autoResize":false,"id":144,"type":"Subtraction"},"145":{"outputLength":1,"height":null,"title":"Subtraction","icon":"ti ti-minus","id":145,"type":"TitleElement"},"150":{"inputLength":1,"links":[160],"height":null,"id":150,"type":"LabelElement"},"151":{"inputLength":1,"links":[161],"height":null,"id":151,"type":"LabelElement"},"152":{"x":-1713,"y":404,"elements":[153,150,151],"autoResize":false,"id":152,"type":"Subtraction"},"153":{"outputLength":1,"height":null,"title":"Subtraction","icon":"ti ti-minus","id":153,"type":"TitleElement"},"156":{"x":-2004,"y":470,"elements":[157,159,160,161,162,163],"autoResize":false,"id":156,"type":"SplitEditor"},"157":{"height":null,"title":"Split","icon":"ti ti-ti ti-arrows-split","id":157,"type":"TitleElement"},"159":{"inputLength":1,"links":[37],"height":null,"id":159,"type":"LabelElement"},"160":{"outputLength":1,"height":null,"id":160,"type":"LabelElement"},"161":{"outputLength":1,"height":null,"id":161,"type":"LabelElement"},"162":{"outputLength":1,"height":null,"id":162,"type":"LabelElement"},"163":{"outputLength":1,"height":null,"id":163,"type":"LabelElement"},"172":{"inputLength":1,"links":[205],"height":null,"id":172,"type":"LabelElement"},"173":{"inputLength":1,"links":[197],"height":null,"id":173,"type":"LabelElement"},"174":{"x":-320,"y":803,"elements":[175,172,173],"autoResize":false,"id":174,"type":"Division"},"175":{"outputLength":1,"height":null,"title":"Division","icon":"ti ti-divide","id":175,"type":"TitleElement"},"178":{"x":-926,"y":994,"elements":[179,184,185],"autoResize":false,"nodeEditorJSON":"{\"objects\":{\"872\":{\"x\":100,\"y\":360,\"elements\":[873,876,931,935],\"autoResize\":false,\"elementsJSON\":[{\"name\":\"a\",\"type\":\"float\",\"id\":0},{\"name\":\"b\",\"type\":\"float\",\"id\":1}],\"id\":872,\"type\":\"GroupInputEditor\"},\"873\":{\"height\":null,\"title\":\"Group Inputs\",\"id\":873,\"type\":\"TitleElement\"},\"875\":{\"value\":\"Add Input\",\"id\":875,\"type\":\"ButtonInput\"},\"876\":{\"inputs\":[875],\"height\":null,\"id\":876,\"type\":\"Element\"},\"880\":{\"x\":1171,\"y\":355,\"elements\":[881,884,936],\"autoResize\":false,\"id\":880,\"type\":\"GroupOutputEditor\"},\"881\":{\"height\":null,\"title\":\"Group Output\",\"id\":881,\"type\":\"TitleElement\"},\"883\":{\"options\":[{\"name\":\"string\",\"value\":\"string\"},{\"name\":\"float\",\"value\":\"float\"},{\"name\":\"vec2\",\"value\":\"vec2\"},{\"name\":\"vec3\",\"value\":\"vec3\"},{\"name\":\"vec4\",\"value\":\"vec4\"},{\"name\":\"color\",\"value\":\"color\"},{\"name\":\"boolean\",\"value\":\"bool\"},{\"name\":\"anything\",\"value\":\"any\"},{\"name\":\"GPU node\",\"value\":\"node\"},{\"name\":\"nothing\",\"value\":\"null\"}],\"value\":\"bool\",\"id\":883,\"type\":\"SelectInput\"},\"884\":{\"inputs\":[883],\"height\":null,\"id\":884,\"type\":\"Element\"},\"891\":{\"inputLength\":1,\"links\":[931],\"height\":null,\"id\":891,\"type\":\"LabelElement\"},\"892\":{\"inputLength\":1,\"links\":[935],\"height\":null,\"id\":892,\"type\":\"LabelElement\"},\"893\":{\"x\":462,\"y\":391,\"elements\":[894,891,892],\"autoResize\":false,\"id\":893,\"type\":\"Subtraction\"},\"894\":{\"outputLength\":1,\"height\":null,\"title\":\"Subtraction\",\"icon\":\"ti ti-minus\",\"id\":894,\"type\":\"TitleElement\"},\"899\":{\"inputs\":[900],\"height\":null,\"id\":899,\"type\":\"Element\"},\"900\":{\"value\":0,\"id\":900,\"type\":\"NumberInput\"},\"901\":{\"x\":611,\"y\":314,\"elements\":[902,899],\"autoResize\":false,\"id\":901,\"type\":\"FloatEditor\"},\"902\":{\"outputLength\":1,\"height\":null,\"title\":\"Float\",\"icon\":\"ti ti-ti ti-box-multiple-1\",\"id\":902,\"type\":\"TitleElement\"},\"907\":{\"inputLength\":1,\"links\":[902],\"height\":null,\"id\":907,\"type\":\"LabelElement\"},\"908\":{\"inputLength\":1,\"links\":[894],\"height\":null,\"id\":908,\"type\":\"LabelElement\"},\"909\":{\"x\":784,\"y\":316,\"elements\":[910,907,908],\"autoResize\":false,\"id\":909,\"type\":\"Max\"},\"910\":{\"outputLength\":1,\"height\":null,\"title\":\"Max\",\"icon\":\"ti ti-math-function\",\"id\":910,\"type\":\"TitleElement\"},\"914\":{\"inputLength\":1,\"links\":[910],\"height\":null,\"id\":914,\"type\":\"LabelElement\"},\"915\":{\"x\":780,\"y\":419,\"elements\":[916,914],\"autoResize\":false,\"id\":915,\"type\":\"Sign\"},\"916\":{\"outputLength\":1,\"height\":null,\"title\":\"Sign\",\"icon\":\"ti ti-math-function\",\"id\":916,\"type\":\"TitleElement\"},\"928\":{\"value\":\"a\",\"id\":928,\"type\":\"StringInput\"},\"929\":{\"options\":[{\"name\":\"string\",\"value\":\"string\"},{\"name\":\"float\",\"value\":\"float\"},{\"name\":\"vec2\",\"value\":\"vec2\"},{\"name\":\"vec3\",\"value\":\"vec3\"},{\"name\":\"vec4\",\"value\":\"vec4\"},{\"name\":\"color\",\"value\":\"color\"},{\"name\":\"boolean\",\"value\":\"bool\"},{\"name\":\"anything\",\"value\":\"any\"},{\"name\":\"GPU node\",\"value\":\"node\"}],\"value\":\"float\",\"id\":929,\"type\":\"SelectInput\"},\"930\":{\"value\":\"Remove \",\"id\":930,\"type\":\"ButtonInput\"},\"931\":{\"outputLength\":1,\"inputs\":[928,929,930],\"height\":null,\"id\":931,\"type\":\"Element\"},\"932\":{\"value\":\"b\",\"id\":932,\"type\":\"StringInput\"},\"933\":{\"options\":[{\"name\":\"string\",\"value\":\"string\"},{\"name\":\"float\",\"value\":\"float\"},{\"name\":\"vec2\",\"value\":\"vec2\"},{\"name\":\"vec3\",\"value\":\"vec3\"},{\"name\":\"vec4\",\"value\":\"vec4\"},{\"name\":\"color\",\"value\":\"color\"},{\"name\":\"boolean\",\"value\":\"bool\"},{\"name\":\"anything\",\"value\":\"any\"},{\"name\":\"GPU node\",\"value\":\"node\"}],\"value\":\"float\",\"id\":933,\"type\":\"SelectInput\"},\"934\":{\"value\":\"Remove \",\"id\":934,\"type\":\"ButtonInput\"},\"935\":{\"outputLength\":1,\"inputs\":[932,933,934],\"height\":null,\"id\":935,\"type\":\"Element\"},\"936\":{\"inputLength\":1,\"links\":[916],\"height\":null,\"id\":936,\"type\":\"LabelElement\"}},\"nodes\":[872,880,893,901,909,915],\"id\":847,\"type\":\"Canvas\"}","groupName":"Greater Than","id":178,"type":"GroupPrototypeEditor"},"179":{"height":null,"title":"Group Prototype","icon":"ti ti-ti ti-components","id":179,"type":"TitleElement"},"181":{"value":"Greater Than","id":181,"type":"StringInput"},"182":{"value":"Show Graph","id":182,"type":"ButtonInput"},"183":{"value":"Refresh instances ","id":183,"type":"ButtonInput"},"184":{"inputs":[181],"height":null,"id":184,"type":"LabelElement"},"185":{"inputs":[182,183],"height":null,"id":185,"type":"Element"},"194":{"inputs":[195],"height":null,"id":194,"type":"Element"},"195":{"value":2,"id":195,"type":"NumberInput"},"196":{"x":-532,"y":908,"elements":[197,194],"autoResize":false,"id":196,"type":"FloatEditor"},"197":{"outputLength":1,"height":null,"title":"Float","icon":"ti ti-ti ti-box-multiple-1","id":197,"type":"TitleElement"},"202":{"inputLength":1,"links":[227],"height":null,"id":202,"type":"LabelElement"},"203":{"inputLength":1,"links":[231],"height":null,"id":203,"type":"LabelElement"},"204":{"x":-874,"y":838,"elements":[205,202,203],"autoResize":false,"id":204,"type":"Addition"},"205":{"outputLength":1,"height":null,"title":"Addition","icon":"ti ti-plus","id":205,"type":"TitleElement"},"208":{"x":-2457,"y":863,"elements":[209],"autoResize":false,"id":208,"type":"NormalGeometry"},"209":{"outputLength":3,"height":null,"title":"Normal Geometry","icon":"ti ti-arrow-bar-up","id":209,"type":"TitleElement"},"212":{"x":-2010,"y":861,"elements":[213,215,216,217,218,219],"autoResize":false,"id":212,"type":"SplitEditor"},"213":{"height":null,"title":"Split","icon":"ti ti-ti ti-arrows-split","id":213,"type":"TitleElement"},"215":{"inputLength":1,"links":[209],"height":null,"id":215,"type":"LabelElement"},"216":{"outputLength":1,"height":null,"id":216,"type":"LabelElement"},"217":{"outputLength":1,"height":null,"id":217,"type":"LabelElement"},"218":{"outputLength":1,"height":null,"id":218,"type":"LabelElement"},"219":{"outputLength":1,"height":null,"id":219,"type":"LabelElement"},"226":{"x":-1566,"y":862,"elements":[227,251,253],"autoResize":false,"inputElementsJSON":[{"name":"a","type":"float","id":0},{"name":"b","type":"float","id":1}],"id":226,"type":"Greater Than"},"227":{"outputLength":1,"height":null,"title":"Greater Than","id":227,"type":"TitleElement"},"230":{"x":-1566,"y":979,"elements":[231,255,257],"autoResize":false,"inputElementsJSON":[{"name":"a","type":"float","id":0},{"name":"b","type":"float","id":1}],"id":230,"type":"Greater Than"},"231":{"outputLength":1,"height":null,"title":"Greater Than","id":231,"type":"TitleElement"},"234":{"x":1181,"y":115,"elements":[235,237],"autoResize":true,"source":"// TIP: extend this node by\n// dragging its lower-right corner!\n\n// ################################################################\n// #           CG-ET: Extending the Three.js Framework            #\n// #                                                              #\n// #              Implementing node groups into the               #\n// #                    three.js playground                       #\n// ################################################################\n\n/* MOTIVATION\n\nThis prototype was written for the 3D-Computer-Graphics seminar\n\"Extending the Three.js Framework\" at Hasso-Plattner-Institute.\n\nNode-based shadergraphs are an intuitive and simple way for non-\nprogrammers to construct materials and scenes of higher complexity.\n\nThe more complexity a scene has, the more chaotic its shader-graph\nwill get. Thus, this prototype introduces \"Node Groups\", which\nencapsulates nodes into a separate view and simplifies reusing\nexisting node setups.\n\n*/\n\n/* THE PROJECT\n\nYou can add a new \"Node Group\" by using the search box below and\ntyping \"Node Prototype\". Once you press enter, a new node will\nspawn. This node allows you to set the name of the group and the\nsubgraph it is meant to represent.\n\nWithin the subgraph, two unremovable nodes represent group inputs\nand a group output, both of which can be specified by the user.\n\nOnce done with configuring, you can go back to the original view\nusing the \"Leave\"-button on the top left. You can instantiate your\ngroup by searching for its name in the search box.\n\nYou can explicitly refresh the instantiated nodes by either\npressing \"Refresh instances\" on the group prototype node or by\npressing the \"Refresh\"-button in the subgraph-view.\n\nYou can nest groups freely as you wish.\n\n*/\n\n/* EXAMPLES\n\nThere are two examples, which you can select in the \"examples\"-tab\non the top left under the sub-menu \"node groups\".\n\nBe aware that the \"brick texture\" example is a bit more complex and\nthus needs a bit longer to load.\n\n*/\n\n/* SOURCE CODE\n\nThe source code for this specific branch can be found on:\nhttps://github.com/abc013/three.js/tree/nodeGroups-submission\n\nThe source code for ongoing development (and possible integration\ninto three.js) can be found on:\nhttps://github.com/abc013/three.js/tree/nodeGroups\n\n*/\n\nlayout = {\n\tname: \"Intro node\",\n\twidth: 100\n};\n\n\nfunction main() {\n\n\n}\n","id":234,"type":"NodePrototypeEditor"},"235":{"outputLength":1,"height":null,"title":"Node Prototype","icon":"ti ti-ti ti-components","id":235,"type":"TitleElement"},"237":{"height":775,"source":"// TIP: extend this node by\n// dragging its lower-right corner!\n\n// ################################################################\n// #           CG-ET: Extending the Three.js Framework            #\n// #                                                              #\n// #              Implementing node groups into the               #\n// #                    three.js playground                       #\n// ################################################################\n\n/* MOTIVATION\n\nThis prototype was written for the 3D-Computer-Graphics seminar\n\"Extending the Three.js Framework\" at Hasso-Plattner-Institute.\n\nNode-based shadergraphs are an intuitive and simple way for non-\nprogrammers to construct materials and scenes of higher complexity.\n\nThe more complexity a scene has, the more chaotic its shader-graph\nwill get. Thus, this prototype introduces \"Node Groups\", which\nencapsulates nodes into a separate view and simplifies reusing\nexisting node setups.\n\n*/\n\n/* THE PROJECT\n\nYou can add a new \"Node Group\" by using the search box below and\ntyping \"Node Prototype\". Once you press enter, a new node will\nspawn. This node allows you to set the name of the group and the\nsubgraph it is meant to represent.\n\nWithin the subgraph, two unremovable nodes represent group inputs\nand a group output, both of which can be specified by the user.\n\nOnce done with configuring, you can go back to the original view\nusing the \"Leave\"-button on the top left. You can instantiate your\ngroup by searching for its name in the search box.\n\nYou can explicitly refresh the instantiated nodes by either\npressing \"Refresh instances\" on the group prototype node or by\npressing the \"Refresh\"-button in the subgraph-view.\n\nYou can nest groups freely as you wish.\n\n*/\n\n/* EXAMPLES\n\nThere are two examples, which you can select in the \"examples\"-tab\non the top left under the sub-menu \"node groups\".\n\nBe aware that the \"brick texture\" example is a bit more complex and\nthus needs a bit longer to load.\n\n*/\n\n/* SOURCE CODE\n\nThe source code for this specific branch can be found on:\nhttps://github.com/abc013/three.js/tree/nodeGroups-submission\n\nThe source code for ongoing development (and possible integration\ninto three.js) can be found on:\nhttps://github.com/abc013/three.js/tree/nodeGroups\n\n*/\n\nlayout = {\n\tname: \"Intro node\",\n\twidth: 100\n};\n\n\nfunction main() {\n\n\n}\n","id":237,"type":"CodeEditorElement"},"250":{"inputLength":1,"links":[57],"height":null,"id":250,"type":"LabelElement"},"251":{"inputLength":1,"inputs":[252],"links":[216],"height":null,"id":251,"type":"LabelElement"},"252":{"value":0,"id":252,"type":"NumberInput"},"253":{"inputLength":1,"inputs":[254],"links":[217],"height":null,"id":253,"type":"LabelElement"},"254":{"value":0,"id":254,"type":"NumberInput"},"255":{"inputLength":1,"inputs":[256],"links":[217],"height":null,"id":255,"type":"LabelElement"},"256":{"value":0,"id":256,"type":"NumberInput"},"257":{"inputLength":1,"inputs":[258],"links":[218],"height":null,"id":257,"type":"LabelElement"},"258":{"value":0,"id":258,"type":"NumberInput"}},"nodes":[25,36,40,56,76,84,92,98,104,112,120,128,136,144,152,156,174,178,196,204,208,212,234,31,226,230],"id":2,"type":"Canvas"}